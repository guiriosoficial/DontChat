{"ast":null,"code":"var _jsxFileName = \"/Users/guiriosoficial/Documents/Sistemas/DontChat/Client/src/pages/chat/history.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateMessages } from '../../store/messages';\nimport { formatDateTime } from '../../utils';\nimport SocketContext from '../../socket';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction History() {\n  _s();\n\n  const socket = useContext(SocketContext);\n  const dispatch = useDispatch();\n  const {\n    messages\n  } = useSelector(store => store);\n  const messageRef = useRef(null);\n  useEffect(() => {\n    socket.on('reciveMessage', message => {\n      dispatch(updateMessages(message));\n      messageRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"history\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: messages.map(_ref => {\n        let {\n          _id,\n          socketId,\n          userName,\n          userColor,\n          messageContent,\n          messageType,\n          dateTime\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          ref: messageRef,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: userColor\n            },\n            children: [`[${formatDateTime(dateTime)}]`, \"\\xA0\", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [userName, socketId === socket.id && ' (You)', ':']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this), \"\\xA0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this), messageType === 'message' ? messageContent : /*#__PURE__*/_jsxDEV(\"i\", {\n            dangerouslySetInnerHTML: {\n              __html: messageContent\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 21\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(History, \"Q5mAalHyxjrOQJyNwwesPPecKdA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = History;\nexport default History;\n\nvar _c;\n\n$RefreshReg$(_c, \"History\");","map":{"version":3,"sources":["/Users/guiriosoficial/Documents/Sistemas/DontChat/Client/src/pages/chat/history.jsx"],"names":["React","useEffect","useContext","useRef","useDispatch","useSelector","updateMessages","formatDateTime","SocketContext","History","socket","dispatch","messages","store","messageRef","on","message","current","scrollIntoView","behavior","map","_id","socketId","userName","userColor","messageContent","messageType","dateTime","color","id","__html"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,EAAuCC,MAAvC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,sBAA/B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,OAAOC,aAAP,MAA0B,cAA1B;AACA,OAAO,cAAP;;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAMC,MAAM,GAAGR,UAAU,CAACM,aAAD,CAAzB;AACA,QAAMG,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAeP,WAAW,CAAEQ,KAAD,IAAWA,KAAZ,CAAhC;AACA,QAAMC,UAAU,GAAGX,MAAM,CAAC,IAAD,CAAzB;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,MAAM,CAACK,EAAP,CAAU,eAAV,EAA4BC,OAAD,IAAa;AACtCL,MAAAA,QAAQ,CAACL,cAAc,CAACU,OAAD,CAAf,CAAR;AACAF,MAAAA,UAAU,CAACG,OAAX,CAAmBC,cAAnB,CAAkC;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAlC;AACD,KAHD;AAID,GALQ,EAKN,CAACT,MAAD,CALM,CAAT;AAOA,sBACE;AAAS,IAAA,SAAS,EAAC,SAAnB;AAAA,2BACE;AAAA,gBAEIE,QAAQ,CAACQ,GAAT,CAAa;AAAA,YAAC;AACZC,UAAAA,GADY;AAEZC,UAAAA,QAFY;AAGZC,UAAAA,QAHY;AAIZC,UAAAA,SAJY;AAKZC,UAAAA,cALY;AAMZC,UAAAA,WANY;AAOZC,UAAAA;AAPY,SAAD;AAAA,4BASX;AAAc,UAAA,GAAG,EAAEb,UAAnB;AAAA,kCACE;AAAM,YAAA,KAAK,EAAE;AAAEc,cAAAA,KAAK,EAAEJ;AAAT,aAAb;AAAA,uBACI,IAAGjB,cAAc,CAACoB,QAAD,CAAW,GADhC,uBAGE;AAAA,yBACGJ,QADH,EAEGD,QAAQ,KAAKZ,MAAM,CAACmB,EAApB,IAA0B,QAF7B,EAGG,GAHH;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAYIH,WAAW,KAAK,SAAhB,GACID,cADJ,gBAEI;AAAG,YAAA,uBAAuB,EAAE;AAACK,cAAAA,MAAM,EAAEL;AAAT;AAA5B;AAAA;AAAA;AAAA;AAAA,kBAdR;AAAA,WAASJ,GAAT;AAAA;AAAA;AAAA;AAAA,gBATW;AAAA,OAAb;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmCD;;GAhDQZ,O;UAEUL,W,EACIC,W;;;KAHdI,O;AAkDT,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useContext, useRef } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateMessages } from '../../store/messages'\nimport { formatDateTime } from '../../utils'\nimport SocketContext from '../../socket'\nimport './style.scss'\n\nfunction History() {\n  const socket = useContext(SocketContext)\n  const dispatch = useDispatch()  \n  const { messages } = useSelector((store) => store)\n  const messageRef = useRef(null)\n\n  useEffect(() => {\n    socket.on('reciveMessage', (message) => {\n      dispatch(updateMessages(message))\n      messageRef.current.scrollIntoView({ behavior: 'smooth' })\n    })\n  }, [socket])\n\n  return (\n    <section className=\"history\">\n      <ul>\n        {\n          messages.map(({\n            _id,\n            socketId,\n            userName,\n            userColor,\n            messageContent,\n            messageType,\n            dateTime\n          }) => (\n            <li key={_id} ref={messageRef}>\n              <span style={{ color: userColor }}>\n                {`[${formatDateTime(dateTime)}]`}\n                &nbsp;\n                <b>\n                  {userName}\n                  {socketId === socket.id && ' (You)'}\n                  {':'}\n                </b>\n                &nbsp;\n              </span>\n              {\n                messageType === 'message'\n                  ? messageContent\n                  : <i dangerouslySetInnerHTML={{__html: messageContent}} />\n              }\n            </li>\n          ))\n        }\n      </ul>\n    </section>\n  )\n}\n\nexport default History\n"]},"metadata":{},"sourceType":"module"}